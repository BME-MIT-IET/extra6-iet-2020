<?xml version="1.0"?>
<project name="csv2rdf" default="dist" basedir="." xmlns:sonar="antlib:org.sonar.ant">
	<description>CSV2RDF utility</description>

	
	<!-- Global Properties -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	
	<property name="project.name" value="csv2rdf"/>
	<property name="project.version" value="0.1"/>
	
	<property name="mainclass" value="com.complexible.common.csv.CSV2RDF"/>

	<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
	<property name="sonar.host.url" value="http://localhost:9000" />

	<!-- Define the SonarQube project properties -->
	<property name="sonar.projectKey" value="bme-iet-extra6-2020.csv2rdf" />
	<property name="sonar.projectName" value="csv2rdf" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="src" />
	<property name="sonar.java.binaries" value="build" />
	<property name="sonar.java.libraries" value="lib/*.jar" />
	
	<path id="project.class.path">
		<pathelement location="lib/"/>
		<pathelement location="${build}"/>
		<fileset dir="lib">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>
	</path>
	
	<target name="clean" description="Clean up build files">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
	
	<target name="init">
		<pathconvert targetos="unix" property="classpath"
			refid="project.class.path"/>
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>
	
	<target name="compile" depends="init">
		<javac source="7" target="7" destdir="${build}" debug="yes"
			deprecation="yes">
			<classpath refid="project.class.path"/>
			<src path="${src}"/>
		</javac>
	</target>
	
	<target name="distfiles">
		<!-- Copy in lib files -->
		<mkdir dir="${dist}/lib"/>		
		
		<copy todir="${dist}/lib">
			<fileset dir="lib">
				<include name="**/*.jar"/>
				<exclude name="**/${project.name}*.jar"/>
			</fileset>
		</copy>
		
		<copy todir="${dist}">
			<fileset dir=".">
				<include name="README.md"/>
				<include name="LICENSE.txt"/>
			</fileset>
		</copy>
	</target>
	
	<target name="dist" depends="compile, distfiles" description="Create a distribution">
		<!-- Generate relative classpath for jar file -->
		<property name="rlib" location="${basedir}/lib/"/>
		<pathconvert dirsep="/" pathsep=" " property="Class-Path">
			<map from="${rlib}/" to=""/>
			<map from="${rlib}\" to=""/>
			<path>
				<fileset dir="${rlib}">
					<include name="**/*.jar"/>
				</fileset>
			</path>
		</pathconvert>

		<!-- Make Jar file. -->
		<jar jarfile="${dist}/lib/${project.name}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${mainclass}"/>
				<attribute name="Class-Path" value="${Class-Path}"/>
				
			</manifest>
		</jar>
	</target>

	<target name="zip" depends="dist" description="Create zip file of the distribution">
		<zip destfile="${dist}/${project.name}-${DSTAMP}.zip">
			<zipfileset dir="${dist}">
				<include name="**/*"/>
				<exclude name="**/*.zip"/>
			</zipfileset>
		</zip>
	</target>

	<!-- Define SonarScanner for Ant Target -->
	<target name="sonar">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="lib/sonarqube-ant-task-2.7.0.1612.jar" />
		</taskdef>

		<!-- Execute SonarScanner for Ant Analysis -->
		<sonar:sonar />
	</target>


</project>